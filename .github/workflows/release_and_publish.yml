name: Release & Publish

on:
    push:
        branches:
            - main

permissions: write-all
concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    release:
        name: Release and Publish
        if: github.repository == 'interledger/open-payments-snippets-vscode'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Environment setup
              uses: ./.github/workflows/setup

            - name: Create release PR
              id: changesets
              uses: changesets/action@v1
              with:
                  commit: "chore(release): version packages"
                  title: "chore(release): version packages"
                  version: pnpm ci:version
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Retrieve the extension name and version
              if: steps.changesets.outputs.hasChangesets == 'false'
              run: |
                  VERSION=$(jq -r .version package.json)
                  DISPLAY_NAME=$(jq -r .displayName package.json)
                  echo "VERSION=v$VERSION" >> $GITHUB_ENV
                  echo "DISPLAY_NAME=$DISPLAY_NAME" >> $GITHUB_ENV
                  echo "RELEASE_NAME=$DISPLAY_NAME@$VERSION" >> $GITHUB_ENV

            - name: Check tag
              if: steps.changesets.outputs.hasChangesets == 'false'
              uses: mukunku/tag-exists-action@v1.4.0
              id: tag
              with:
                  tag: "${{ env.VERSION }}"

            - name: Release
              if: |
                  steps.changesets.outputs.hasChangesets == 'false' && steps.tag.outputs.exists == 'false'
              id: create_release
              uses: ncipollo/release-action@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag: ${{ env.VERSION }}
                  name: ${{ env.RELEASE_NAME }}
                  generateReleaseNotes: true
                  draft: false
                  prerelease: false

            - name: Tag & Publish
              if: |
                  steps.changesets.outputs.hasChangesets == 'false' && steps.tag.outputs.exists == 'false'
              run: |
                  git tag ${{ env.VERSION }}
                  git push origin ${{ env.VERSION }}
                  pnpm dlx vsce publish -p ${{ secrets.PUBLISHER_TOKEN }}
